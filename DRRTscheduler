#!/bin/bash
# DRRT Alliance Assembler, SUMMER DRRT
### REMEMBER! ONLY WORKS IN WSL!! ###

echo DRRT Alliance Assembler.

echo "Works only in WSL."

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

WHERE="${SCRIPT_DIR}/../.."

echo $SCRIPT_DIR/../

RED='\033[0;31m'

NOCOLOR='\033[0m'

if [ ! -d $SCRIPT_DIR/../Qualifications/ ]; then
    mkdir $SCRIPT_DIR/../Qualifications/
fi

if [ ! -d $SCRIPT_DIR/../Playoffs/ ]; then
    mkdir $SCRIPT_DIR/../Playoffs/
fi

if [ ! -d $SCRIPT_DIR/../oldships/ ]; then
    mkdir $SCRIPT_DIR/../oldships/
fi

# TODO: use getopts or something to get the options without using a stupid string

run_matchmaker () {
    if [ ! -f $WHERE/Matchmaker/MatchMaker.exe ]; then
        echo -e "${RED}ERROR:${NOCOLOR} MatchMaker.exe not at '$WHERE/Matchmaker/'! Get it and put it there to run this script."

        echo Stop.

        exit
    fi

    echo "Running MatchMaker.exe . . ."

    "$WHERE/Matchmaker/MatchMaker.exe" -o $1 > "$SCRIPT_DIR/rawSchedule.txt"

    echo "rawSchedule.txt generated with MatchMaker.exe output."
 
    echo "Contents of rawSchedule.txt:"

    cat "$SCRIPT_DIR/../drrt-scripts/rawSchedule.txt"
}

. "$SCRIPT_DIR/../drrt-scripts/shipIndex.conf"

if [[ -f $SCRIPT_DIR/../Qualifications/* ]]; then 
    echo "Deleting contents of 'Qualifications/' . . ."

    rm $SCRIPT_DIR/../Qualifications/*
fi

if [ -f rawSchedule.txt ]; then
    echo "A match schedule already exists!"

    while true; do
        if [ $# -eq 0 ]; then
            REPLY="n"
        else
            read -p "Generate new schedule? [Y/n]: " -n 1 -r
        fi

        case $REPLY in
            [Yy]* ) 
                echo "Deleting 'rawSchedule.txt' . . ."

                rm "$SCRIPT_DIR/rawSchedule.txt"

                rm "$SCRIPT_DIR/spreadsheetSCH.txt"

                echo "rawSchedule.txt deleted."
                
                run_matchmaker "$1"
                
                break;;
            [NnQq]* )
                echo 

                echo "Current schedule will be used."

                break;;
            [A-Za-z]*) 
                echo 

                echo "Please answer [Y/n].";;
            * ) 
                echo "Please answer [Y/n].";;
        esac
    done
else
    echo "A new rawSchedule.txt will be generated."

    if [ $# -eq 0 ]; then
        echo -e "${RED}ERROR:${NOCOLOR} Please specify arguments to pass to MatchMaker."

        echo "Stop."

        exit
    fi
    
    run_matchmaker "$1"
fi

echo "Creating spreadsheet-suitable schedule 'spreadsheetSCH.txt' . . ."

grep '^ [0-9 ][0-9]:' "$SCRIPT_DIR/rawSchedule.txt" | sed 's/^ [0-9 ][0-9]: *//' > "$SCRIPT_DIR/spreadsheetSCH.txt"

echo "spreadsheetSCH.txt created."

sed 's/\*/ /g' "$SCRIPT_DIR/spreadsheetSCH.txt" > "$SCRIPT_DIR/.no_asterisks"

i=1
while read p; do
    ships="" 

    j=0

    for k in $p; do
        if [ $j -ge 6 ]; then break; fi

        ships+=" ${participants[k]}"

        let "j+=1"
    done
    
    printf -v matchNumber "%03d" $i
    
    ./DRRTassembler $ships "Match ${matchNumber} - ^1The Red Alliance^7" "Match ${matchNumber} - ^4The Blue Alliance^7" & 
    
    let "i += 1"
done <"$SCRIPT_DIR/.no_asterisks"

rm "$SCRIPT_DIR/.no_asterisks"

echo "Scheduler done."

echo "Lets get this tournament started!"

echo "Now import spreadsheetSCH.txt into the DRRT Datasheet."

while true; do
    read -p 'Open the drrt-scripts directory in Windows Explorer? [Y/n]: ' -n 1 -r

    case $REPLY in
        [Yy]* ) 
            echo 

            echo "Opening directory '$(wslpath -w "$SCRIPT_DIR")'. . ." 

            explorer.exe "$(wslpath -w "$SCRIPT_DIR")"

            break;;
        [NnQq]* ) 
            echo 

            echo "Stop."

            break;;
        [A-Za-z]* ) 
            echo

            echo "Answer [Y/n].";;
        ""* ) 
            echo "Answer [Y/n].";;

        * ) 
            echo

            echo "Answer [Y/n].";;
    esac
done
